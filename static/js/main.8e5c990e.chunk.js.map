{"version":3,"sources":["components/HomePage/HomePage.jsx","components/Form/Form.jsx","components/PersonName/PersonName.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","api.js","components/NotFoundPage/NotFoundPage.jsx","components/MainNavigation/MainNavigation.jsx","App.jsx","index.jsx"],"names":["HomePage","Form","searchValue","history","Input","value","length","onChange","event","push","target","focus","placeholder","defaultProps","PersonName","name","propTypes","PropTypes","string","isRequired","PeopleTable","people","handleSort","useState","activeRow","setActiveRow","Table","striped","Header","Row","HeaderCell","className","onClick","Body","map","person","slug","sex","key","Cell","uniqueKey","to","born","died","motherName","fatherName","PeoplePage","setPeople","visiblePeople","setVisiblePeople","sortPeopleBy","setSortPeopleBy","useHistory","location","useLocation","URLSearchParams","search","get","useEffect","fetch","then","response","ok","Error","json","lowerSearchValue","toLowerCase","filter","includes","sortedPeople","sort","currentPerson","nextPerson","localeCompare","useCallback","NotFoundPage","MainNavigation","Menu","Item","exact","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e5c990e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from 'semantic-ui-react';\n\nexport const Form = ({ searchValue, history }) => (\n  <Input\n    value={searchValue && searchValue.length ? searchValue : ''}\n    onChange={event => history.push(`?query=${event.target.value}`)}\n    focus\n    placeholder=\"Search...\"\n  />\n);\n\nForm.propTypes = {\n  searchValue: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nForm.defaultProps = {\n  searchValue: '',\n  history: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PersonName = ({ name }) => {\n  return (\n    <>\n      {name}\n    </>\n  );\n};\n\nPersonName.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport className from 'classnames';\nimport uniqueKey from 'unique-key';\n\nimport { Table } from 'semantic-ui-react';\nimport { PersonName } from '../PersonName';\n\nexport const PeopleTable = ({ people, handleSort }) => {\n  const [activeRow, setActiveRow] = useState('');\n\n  return (\n    <Table striped>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell\n            className=\"sort\"\n            onClick={() => handleSort('name')}\n          >\n            Name\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            className=\"sort\"\n            onClick={() => handleSort('sex')}\n          >\n            Sex\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            className=\"sort\"\n            onClick={() => handleSort('born')}\n          >\n            Born\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            className=\"sort\"\n            onClick={() => handleSort('died')}\n          >\n            Died\n          </Table.HeaderCell>\n          <Table.HeaderCell>Mother</Table.HeaderCell>\n          <Table.HeaderCell>Father</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {people.map(person => (\n          <Table.Row\n            className={className('row',\n              activeRow === person.slug && person.sex === 'm'\n                ? 'active-row--men'\n                : activeRow === person.slug\n              && person.sex === 'f'\n                  ? 'active-row--women'\n                  : '')}\n            key={person.slug}\n          >\n            <Table.Cell>\n              <NavLink\n                key={uniqueKey(6)}\n                to={`/people/:person=${person.slug}?`}\n                onClick={() => setActiveRow(person.slug)}\n              >\n                <PersonName\n                  key={uniqueKey(`${5}`)}\n                  name={person.name}\n                />\n              </NavLink>\n            </Table.Cell>\n            <Table.Cell key={uniqueKey(`${1}`)}>{person.sex}</Table.Cell>\n            <Table.Cell key={uniqueKey(`${2}`)}>{person.born}</Table.Cell>\n            <Table.Cell key={uniqueKey(`${3}`)}>{person.died}</Table.Cell>\n            <Table.Cell key={uniqueKey(`${4}`)}>{person.motherName}</Table.Cell>\n            <Table.Cell key={uniqueKey(`${4}`)}>{person.fatherName}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string.isRequired,\n      born: PropTypes.number.isRequired,\n      died: PropTypes.number.isRequired,\n      motherName: PropTypes.string,\n      fatherName: PropTypes.string,\n    }),\n  ).isRequired,\n  handleSort: PropTypes.func.isRequired,\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Form } from '../Form';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const [visiblePeople, setVisiblePeople] = useState([]);\n  const [sortPeopleBy, setSortPeopleBy] = useState('');\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const searchValue = searchParams.get('query');\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  useEffect(() => {\n    setVisiblePeople(people);\n  }, []);\n\n  useEffect(() => {\n    if (searchValue) {\n      const lowerSearchValue = searchValue.toLowerCase();\n\n      setVisiblePeople(people.filter(person => (\n        person.name.toLowerCase().includes(lowerSearchValue)\n        || (person.motherName\n          && person.motherName.toLowerCase().includes(lowerSearchValue))\n        || (person.fatherName\n          && person.fatherName.toLowerCase().includes(lowerSearchValue))\n      )));\n    } else {\n      setVisiblePeople(people);\n    }\n  }, [people, searchValue]);\n\n  useEffect(() => {\n    let sortedPeople = [];\n\n    switch (sortPeopleBy) {\n      case 'name':\n        sortedPeople = [...people].sort((currentPerson, nextPerson) => (\n          currentPerson.name.localeCompare(nextPerson.name)\n        ));\n        break;\n\n      case 'sex':\n        sortedPeople = [...people].sort((currentPerson, nextPerson) => (\n          currentPerson.sex.localeCompare(nextPerson.sex)\n        ));\n        break;\n\n      case 'born':\n        sortedPeople = [...people].sort((currentPerson, nextPerson) => (\n          +currentPerson.born - +nextPerson.born\n        ));\n        break;\n\n      case 'died':\n        sortedPeople = [...people].sort((currentPerson, nextPerson) => (\n          +currentPerson.died - +nextPerson.died\n        ));\n        break;\n\n      default:\n        sortedPeople.push([...people]);\n        break;\n    }\n\n    setVisiblePeople(sortedPeople);\n    sortedPeople = [];\n  }, [sortPeopleBy]);\n\n  const handleSort = useCallback(\n    (value) => {\n      setSortPeopleBy(value);\n    }, [],\n  );\n\n  return (\n    <>\n      <Form\n        searchValue={searchValue}\n        history={history}\n      />\n      <h1>People Page</h1>\n      <PeopleTable people={visiblePeople} handleSort={handleSort} />\n    </>\n  );\n};\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => (\n  fetch(BASE_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\nexport const MainNavigation = () => (\n  <Menu>\n    <Menu.Item>\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"navbar-item\"\n      >\n        Home Page\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar-item\"\n      >\n        People Page\n      </NavLink>\n    </Menu.Item>\n  </Menu>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { MainNavigation } from './components/MainNavigation';\n\nconst App = () => (\n  <div className=\"App\">\n    <MainNavigation />\n    <Switch>\n\n      <Route path=\"/people\">\n        <PeoplePage />\n      </Route>\n\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n\n      <Redirect path=\"/home\" to=\"/\" />\n\n      <NotFoundPage />\n\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}