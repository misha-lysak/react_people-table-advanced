{"version":3,"sources":["components/HomePage/HomePage.jsx","components/Form/Form.jsx","components/PersonName/PersonName.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","api.js","components/NotFoundPage/NotFoundPage.jsx","components/MainNavigation/MainNavigation.jsx","App.jsx","index.jsx"],"names":["HomePage","Form","searchValue","setSearchValue","Input","value","onChange","event","target","focus","placeholder","PersonName","name","propTypes","PropTypes","string","isRequired","PeopleTable","people","useState","activeRow","setActiveRow","Table","striped","Header","Row","HeaderCell","Body","map","person","className","slug","sex","key","Cell","to","onClick","born","died","motherName","fatherName","PeoplePage","setPeople","visiblePeople","setVisiblePeople","useEffect","fetch","then","response","ok","Error","json","lowerSearchValue","toLowerCase","filter","includes","NotFoundPage","MainNavigation","Menu","Item","exact","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.399e68a4.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from 'semantic-ui-react';\n\nexport const Form = ({ searchValue, setSearchValue }) => {\n\n  return (\n    <Input\n      value={searchValue}\n      onChange={event => setSearchValue(event.target.value)}\n      focus\n      placeholder=\"Search...\"\n    />\n  );\n};\n\nForm.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  setSearchValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PersonName = ({ name }) => {\n  return (\n    <>\n      {name}\n    </>\n  );\n};\n\nPersonName.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport className from 'classnames';\n\nimport { Table } from 'semantic-ui-react';\nimport { PersonName } from '../PersonName';\n\nexport const PeopleTable = ({ people }) => {\n  const [activeRow, setActiveRow] = useState('');\n\n  return (\n    <Table striped>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Sex</Table.HeaderCell>\n          <Table.HeaderCell>Born</Table.HeaderCell>\n          <Table.HeaderCell>Died</Table.HeaderCell>\n          <Table.HeaderCell>Mother</Table.HeaderCell>\n          <Table.HeaderCell>Father</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {people.map(person => (\n          <Table.Row\n            className={className('row',\n              activeRow === person.slug && person.sex === 'm'\n                ? 'active-row--men'\n                : activeRow === person.slug\n              && person.sex === 'f'\n                  ? 'active-row--women'\n                  : '',\n            )}\n            key={person.slug}\n          >\n            <Table.Cell>\n              <NavLink\n                to={`/people/:person=${person.slug}?`}\n                onClick={() => setActiveRow(person.slug)}\n              >\n                <PersonName\n                  name={person.name}\n                />\n              </NavLink>\n            </Table.Cell>\n            <Table.Cell>{person.sex}</Table.Cell>\n            <Table.Cell>{person.born}</Table.Cell>\n            <Table.Cell>{person.died}</Table.Cell>\n            <Table.Cell>{person.motherName}</Table.Cell>\n            <Table.Cell>{person.fatherName}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      sex: PropTypes.string.isRequired,\n      born: PropTypes.number.isRequired,\n      died: PropTypes.number.isRequired,\n      motherName: PropTypes.string,\n      fatherName: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Form } from '../Form';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [visiblePeople, setVisiblePeople] = useState([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  useEffect(() => {\n    setVisiblePeople(people);\n  }, []);\n\n  useEffect(() => {\n    const lowerSearchValue = searchValue.toLowerCase();\n\n    setVisiblePeople(people.filter(person => (\n      person.name.toLowerCase().includes(lowerSearchValue)\n      || (person.motherName\n        && person.motherName.toLowerCase().includes(lowerSearchValue))\n      || (person.fatherName\n        && person.fatherName.toLowerCase().includes(lowerSearchValue))\n    )));\n  }, [people, searchValue]);\n\n  return (\n    <>\n      <Form\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n      />\n      <h1>People Page</h1>\n      <PeopleTable people={visiblePeople} />\n    </>\n  );\n};\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => (\n  fetch(BASE_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\nexport const MainNavigation = () => (\n  <Menu>\n    <Menu.Item>\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"navbar-item\"\n      >\n        Home Page\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar-item\"\n      >\n        People Page\n      </NavLink>\n    </Menu.Item>\n  </Menu>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { MainNavigation } from './components/MainNavigation';\n\nconst App = () => (\n  <div className=\"App\">\n    <MainNavigation />\n    <Switch>\n\n      <Route path=\"/people\">\n        <PeoplePage />\n      </Route>\n\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n\n      <Redirect path=\"/home\" to=\"/\" />\n\n      <NotFoundPage />\n\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}